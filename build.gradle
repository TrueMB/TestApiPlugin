/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.6/samples
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    
    id "io.freefair.lombok" version "6.6.1"
    
    id 'net.minecrell.plugin-yml.bukkit' version '0.6.0'
    id 'io.github.goooler.shadow' version '8.1.7'
}

repositories {
    mavenLocal()
    
    maven {
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
    
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
    }

    maven {
        url = uri('https://jitpack.io')
    }
}

dependencies {    
    //SQL
    library 'mysql:mysql-connector-java:8.0.33'
    library 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
    
    compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	
    compileOnly('io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT')
    
	compileOnly 'com.github.TrueMB:RentItWorldsAPI:1.1'
	compileOnly 'com.github.TrueMB:TempFlyAPI:1.1.1'
}

group = 'TestApiPlugin'
version = '1.0.0'
description = 'TestApiPlugin'
java.sourceCompatibility = JavaVersion.VERSION_21

sourceSets {
    main { 
        java { srcDirs = ["src/main/java"] }
        resources { srcDir "src/main/resources" }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.withType(Copy).all { 
	duplicatesStrategy 'exclude' 
}

tasks.withType(Jar).all { 
	duplicatesStrategy 'exclude' 
}

bukkit {
    name = rootProject.name
    version = rootProject.version
    description = 'A Test API Plugin'
    
    author = 'TrueMB'
    main = 'me.truemb.testapi.main.Main'
    
    apiVersion = '1.18'
	    
    softDepend = ['TempFly', 'TempAfk', 'RentIt-Worlds'] 
}

shadowJar {
  //relocate 'net.kyori', 'me.truemb.discordnotify.kyori'
  relocate 'com.google.gson', 'me.truemb.tempfly.gson'
}